#### BACKLOG

## BOILERPLATE CODE
x	- Environment variable defining the environment (PRODUCTION / STAGING / DEVELOPMENT / TESTING)
x	- Point flask static_folder and template_folder to client files (build / bin)
x		- according to environment


## Model
x	- Expense
x		- date
x		- time
x		- description
x		- amount
x		- comment


## Business
x	- Expenses CRUD
x		- create
x		- list
x		- edit
x		- delete
x	- User can filter expense list.
	- Report (printing):
		- expenses per week
		- average per day in week
		- total average per day
		- total amount


## Functional
	- Authentication - web
	- Authentication - api (auth_key)
	- Authorization
	- Unit Tests on the Server side (controllers, persistence, ?)
	- Unit Tests on the Client side (?)
	- Functional tests (REST Layer)


## Requisites
x	- Single Page Web App
x	- Minimal UI/UX design
x	- REST API
x		- all user actions via the API
		- auth


## Documentation
	- Directory structure
	- Usage instructions
	- Deployment
		- Production
		- Staging
	- Develoment
		- Installation
		- Compiling
		- Testing
	- REST API
x	- Clean up the ngbp README


## Business Bonus
	-? Social login
	-? Share expense


## Other bonus
-	- Responsive (present it first as a mobile app)
	- Docker
		✔	container serving the app @done (14-12-22 21:49)
		✔	using Nging + WSGI @done (14-12-22 21:49)
		☐	static cache
	- manage.py script with commands:
	     ☐	Run server / client in development mode
	     ☐	Prepare the database
	     ☐	Create test data
	     ☐	Create inittial data
	     ☐	Reset the database
	     ☐	CRUD on databse
	     ☐	Backup data?
	- api help (displaying auth_key)
	- api client for python / shell
	- api client general help
	- Confirmation e-mail
	- Forgot password
-	-? Keyboard navigation (navigation, selection, edition)
-	-? Search expense


Model:
	☐	Task
		☐	Reference
		☐	Tags, Groups
		☐	ProductRef
		☐	Added
	☐	Product
		☐	Name
		☐	Refs
			☐	StoreRef
			☐	URL
		☐	Barcode
		☐	Description
	☐	Store
		☐	Name




